name: Continuous Deployment

on:
  push:
    branches: [main, develop]
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  build-and-push:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set environment variables
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            echo "ENV=production" >> $GITHUB_ENV
          else
            echo "ENV=staging" >> $GITHUB_ENV
          fi
          echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: infrastructure/docker/backend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/backend:${{ env.SHA_SHORT }}
            ghcr.io/${{ github.repository }}/backend:${{ env.ENV }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            APP_ENV=${{ env.ENV }}

      - name: Build and push Dashboard Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: infrastructure/docker/dashboard/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/dashboard:${{ env.SHA_SHORT }}
            ghcr.io/${{ github.repository }}/dashboard:${{ env.ENV }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            APP_ENV=${{ env.ENV }}

      # Temp fix for https://github.com/docker/build-push-action/issues/252
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy-staging:
    name: Deploy to Staging
    needs: build-and-push
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    # GitHub ortamı tanımlanıncaya kadar yorum satırına alındı
    # environment: staging
    steps:
      - name: Deploy to Staging
        run: |
          echo "Deploying to staging environment with image tag: ${{ github.repository }}/backend:staging"
          # Actual deployment logic will go here
          # This could involve SSH'ing into a server, updating kubernetes manifests, etc.

      - name: Run E2E Tests
        run: |
          echo "Running end-to-end tests in staging environment"
          # E2E test logic will go here

  deploy-production:
    name: Deploy to Production
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    # GitHub ortamı tanımlanıncaya kadar yorum satırına alındı
    # environment: production
    steps:
      - name: Deploy to Production
        run: |
          echo "Deploying to production environment with image tag: ${{ github.repository }}/backend:production"
          # Actual deployment logic will go here
